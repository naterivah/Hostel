<?php

namespace Bittich\UserBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\EntityRepository;

/**
 * TarifRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository {

    public function findUserByRole($role, $nombreParPage, $page) {

        $qb = $this->createQueryBuilder('u')
                ->where('u.roles LIKE :role')
                ->setParameter('role', '%' . $role . '%')
                ->orderBy('u.nom', 'ASC');
        $qb->setFirstResult(($page - 1) * $nombreParPage)
                ->setMaxResults($nombreParPage);
        return new Paginator($qb);
    }
public function paginator($nombreParPage, $page){
      $qb = $this->createQueryBuilder('u')
                ->orderBy('u.nom', 'ASC');
        $qb->setFirstResult(($page - 1) * $nombreParPage)
                ->setMaxResults($nombreParPage);
        return new Paginator($qb);
}
    public function findUserByNomPrenom($motcle) {
        $qb = $this->createQueryBuilder('u')
                ->where('u.nom LIKE :motcle OR u.prenom LIKE :motcle')
                ->setParameter('motcle', '%' . $motcle . '%')
                ->orderBy('u.nom', 'ASC');
        return $qb->getQuery()
                        ->getResult();
    }

    public function findUserByUserName($id) {
        $qb = $this->createQueryBuilder('u')
                ->where('u.username LIKE :id')
                ->setParameter('id', "%" . $id . "%")
        ;
        return $qb->getQuery()
                        ->getOneOrNullResult();
    }

}
